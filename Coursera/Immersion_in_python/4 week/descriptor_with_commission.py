"""
Часто при зачислении каких-то средств на счет с нас берут комиссию. Давайте реализуем похожий механизм с помощью
дескрипторов. Напишите дескриптор Value, который будет использоваться в нашем классе Account.
class Account:
    amount = Value()
    def __init__(self, commission):
        self.commission = commission
У аккаунта будет атрибут commission. Именно эту коммиссию и нужно вычитать при присваивании значений в amount.
new_account = Account(0.1)
new_account.amount = 100
print(new_account.amount)  # 90
Опишите дескриптор в файле и загрузите его на платформу.
"""


class Value:
    def __get__(self, obj, obj_type):
        return self.value

    def __set__(self, obj, value):
        self.value = value - value * obj.commission

#####################################################################################################################
# Решение от преподавателей
#####################################################################################################################

# Задача практически полностью повторяет пример из лекции, поэтому проблем с ней возникнуть было не должно. Надо только
# разобраться с тем, из какого объекта брать комиссию. Дескрипторы крайне редко встречаются в реальных приложениях, тем
# не менее, важно хотя бы на базовом уровне понимать принцип их работы.
#
#
# class Value:
#     def __init__(self):
#         self.amount = 0
#     def __get__(self, obj, obj_type):
#         return self.amount
#     def __set__(self, obj, value):
#         self.amount = value - value * obj.commission
