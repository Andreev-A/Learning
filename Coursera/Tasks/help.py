# В Python имена переменных могут содержать буквы, цифры и символ нижнего подчеркивания. При этом начинаться переменная
# должна либо с буквы, либо с символа нижнего подчеркивания.
# Если переменная состоит из нескольких слов, то есть это длинное название переменной, то ее принято называть так
# называемым snake_case'ом.
# В других языках вы могли видеть, что переменные называются в так называемом camelCase'ом. В Pythonе так не принято.
# Советую вам не создавать имена длиннее 15 символов.

# REPL (от англ. read-eval-print loop — «цикл „чтение — вычисление — вывод“») — форма организации простой интерактивной
# среды программирования в рамках средств интерфейса командной строки. Чаще всего этой аббревиатурой характеризуется
# интерактивная среда языка программирования Лисп, однако такая форма характерна и для интерактивных сред языков Erlang,
# Groovy, Haskell, Java, JavaScript, Perl, PHP, Python, Ruby, Scala, Smalltalk, Swift и других.
# В такой среде пользователь может вводить выражения, которые среда тут же будет вычислять, а результат вычисления
# отображать пользователю. Названия элементов цикла связаны с соответствующими примитивами Лиспа:
# функция read читает одно выражение и преобразует его в соответствующую структуру данных в памяти;
# функция eval принимает одну такую структуру данных и вычисляет соответствующее ей выражение;
# функция print принимает результат вычисления выражения и печатает его пользователю.
# Чтобы реализовать REPL-среду для некоторого языка, достаточно реализовать три функции: чтения, вычисления и вывода, и
# объединить их в бесконечный цикл. REPL-среда очень удобна при изучении нового языка, так как предоставляет
# пользователю быструю обратную связь.

# Тем, кто любит книги, советуем обратить внимание на следующие издания:
# Марк Саммерфилд - Программирование на Python 3. Подробное руководство
# Марк Лутц - Изучаем Python, 4-е издание

# Также Python умеет работать с комплексными числами, это тип комплекс, для того, чтобы определить комплексное число
# нужно для мнимой части использовать символ J, посмотрите на пример, мы определили комплексное число 14 + 1 J и можем
# убедиться, что его тип действительно комплекс, используя встроенную функцию Type. А также, чтобы достучаться до
# реальной и мнимой части комплексного числа, мы можем воспользоваться атрибутами real и iмag. Что стоит отметить?
# Что в Pyton-e есть еще два модуля, которые позволяют работать с числами, эти модули очень полезны, мы не будем
# рассматривать их подробно, но знать о них нужно. В первую очередь, это модуль deccimal, который позволяет работать с
# вещественными числами с фиксированной точностью, а второй модуль это модуль fractions, который позволяет работать с
# рациональными числами, проще говоря с дробями.

