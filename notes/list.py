# создание списка  #####################################################################################################
# a = [2, 3, 4]
# a = list([1, 2, 3])
# list(range(10))  # генератор списка

# методы списка  #######################################################################################################

# .append()  # добавить в конец (один элемент)
# .extend([5, 5])  # добавить в конец (несколько элементов)
# .insert(3, 'a')  # вставить в определенное место
# .index('i', 5, 7)  # индекс элемента  (необязат. (5-нач., 7-кон.), возвращает первое вхождение, нет элемента - ошибка)
# .pop(0) - получить элемент по индексу [0], удаляя его из последовательности (по умолчанию () - последний)
# my_list[1] = 200  # заменить в списке
# del my_list[5]  # удалить элемент (с конкретного места)
# my_list.remove('s')  # находит первый по порядку элемент 's'
# my_list.count('d')  # количество элементов в списке
# min(my_list), max(my_list), sum(my_list)  # найти мин, макс, сумму (для списка чисел)
# my_list.sort()  # сортировать список
# sorted(my_list)  # если не надо изменить сам список (создает в памяти отсортированную копию)

#   zip() - profit = [100, 20]
#   days = ['пн', 'вт']
#   res = zip(profit, days)
#   print(list(res)) или res = list(zip(profit, days)) или print(dict(zip(days, profit)))
# ___сортировка по второму элементу: work_list.sort(key=lambda x: x[1]) или lst.sort(key=itemgetter(1)) с from operator import itemgetter
# ___получить элемент по индексу удаляя его из последовательности: dots = [segments.pop(0)[1]] for l, r in segments:
